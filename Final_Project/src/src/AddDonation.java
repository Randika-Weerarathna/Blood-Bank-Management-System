
//import java.util.JDateChooser;
import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.RowFilter;
import java.util.Calendar;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;




/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class AddDonation extends javax.swing.JFrame {

    /**
     * Creates new form DonerDetails
     */
    public AddDonation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        paneladd = new javax.swing.JPanel();
        lblnic = new javax.swing.JLabel();
        txtnic = new javax.swing.JTextField();
        lbldate = new javax.swing.JLabel();
        lblblgroup = new javax.swing.JLabel();
        btnadd = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        lblnewDoner = new javax.swing.JLabel();
        txtautono = new javax.swing.JTextField();
        txtbgroup = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtsearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtdate = new com.toedter.calendar.JDateChooser();
        lblbgimage = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        newdonationmenu = new javax.swing.JMenu();
        alldonationmenu = new javax.swing.JMenu();
        backmenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paneladd.setBackground(new java.awt.Color(0,0,0,30));

        lblnic.setBackground(new java.awt.Color(255, 255, 255));
        lblnic.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblnic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblnic.setText("NIC");
        lblnic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        txtnic.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtnic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        txtnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnicKeyPressed(evt);
            }
        });

        lbldate.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lbldate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldate.setText("DATE");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        lblblgroup.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblblgroup.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblblgroup.setText("BLOOD GROUP");
        lblblgroup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        btnadd.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnadd.setText("ADD");
        btnadd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 3, true));
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnclear.setText("CLEAR");
        btnclear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 3, true));

        lblnewDoner.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        lblnewDoner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblnewDoner.setText("Add New Donation");

        txtautono.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        txtautono.setForeground(new java.awt.Color(0, 51, 153));
        txtautono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtautono.setToolTipText("");
        txtautono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 255), 4));

        txtbgroup.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtbgroup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        txtbgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbgroupKeyPressed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jTable1.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "Blood Group", "Next Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txtsearch.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/search.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout paneladdLayout = new javax.swing.GroupLayout(paneladd);
        paneladd.setLayout(paneladdLayout);
        paneladdLayout.setHorizontalGroup(
            paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGap(453, 453, 453)
                .addComponent(lblnewDoner, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addComponent(txtautono, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneladdLayout.createSequentialGroup()
                                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblblgroup, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(lblnic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbldate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(71, 71, 71)
                                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtbgroup, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                    .addComponent(txtnic, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                    .addComponent(txtdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(paneladdLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
        );
        paneladdLayout.setVerticalGroup(
            paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblnewDoner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtautono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(paneladdLayout.createSequentialGroup()
                            .addGap(17, 17, 17)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneladdLayout.createSequentialGroup()
                                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblnic)
                                    .addComponent(txtnic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(lblblgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paneladdLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(txtbgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbldate, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(txtdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(21, 21, 21))
        );

        getContentPane().add(paneladd, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 1160, 450));

        lblbgimage.setBackground(new java.awt.Color(255, 255, 255));
        lblbgimage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/bg2.jpg"))); // NOI18N
        getContentPane().add(lblbgimage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 860));

        newdonationmenu.setBackground(new java.awt.Color(255, 51, 51));
        newdonationmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Donor.png"))); // NOI18N
        newdonationmenu.setText("Add New Donation           ");
        newdonationmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        newdonationmenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newdonationmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newdonationmenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(newdonationmenu);

        alldonationmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/more.png"))); // NOI18N
        alldonationmenu.setText("All Donation Details          ");
        alldonationmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        alldonationmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alldonationmenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(alldonationmenu);

        backmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/exit.png"))); // NOI18N
        backmenu.setText("Back                                          ");
        backmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        backmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backmenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(backmenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    public class NextDateCellRenderer extends DefaultTableCellRenderer {

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        String nextDateStr = (String) table.getModel().getValueAt(row, 2); // Assuming NextDate is the third column
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date today = new Date();
        
        try {
            Date nextDate = sdf.parse(nextDateStr);
            if (nextDate.after(today)) {
                cell.setBackground(java.awt.Color.RED);
            } else {
                cell.setBackground(java.awt.Color.GRAY);
            }
        } catch (Exception e) {
            cell.setBackground(java.awt.Color.WHITE); // Default color
        }

        return cell;
    }
}
    private void newdonationmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newdonationmenuMouseClicked
        AddDonation frmNewForm = new AddDonation();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_newdonationmenuMouseClicked

    private void backmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backmenuMouseClicked
        Home frmNewForm = new Home();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backmenuMouseClicked

    private void alldonationmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alldonationmenuMouseClicked
        AllDonation frmNewForm = new AllDonation();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_alldonationmenuMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try
        {
         Class.forName("com.mysql.cj.jdbc.Driver");
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "");
         Statement st = con.createStatement();
         ResultSet rs = st.executeQuery("select MAX(Donation_ID) from donationdetail");
         rs.next();
         rs.getString("MAX(Donation_ID)");
         
         if(rs.getString("MAX(Donation_ID)")==null)
         {
             
             txtautono.setText("D-00001");
         }
         else
         {
         int ID = Integer.parseInt(rs.getString("MAX(Donation_ID)").substring(2,rs.getString("MAX(Donation_ID)").length()));
         ID++;
         txtautono.setText("D-" + String.format("%05d", ID));
         }
         
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error in Donation Id");
        }
        
       try
        {
         Class.forName("com.mysql.cj.jdbc.Driver");
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "");
         Statement st = con.createStatement();
         String query ="select donordetails.NIC,donordetails.BloodGroup,(SELECT donationdetail.NextDate from donationdetail WHERE donationdetail.NIC=  donordetails.NIC order by donationdetail.NextDate DESC LIMIT 1) AS NextDate FROM donordetails";
        
         
            java.sql.ResultSet rs = st.executeQuery(query);
             DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                tblModel.setRowCount(0);
            while(rs.next()){
                
                String NIC = rs.getString("NIC");
                String BloodGroup = rs.getString("BloodGroup");
                String NDate= rs.getString("NextDate");
                String tbDate[] = {NIC,BloodGroup,NDate};
              tblModel.addRow(tbDate);
            }
             

    
             for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(new NextDateCellRenderer());
        }
           }
        catch(Exception ex)
        {
             JOptionPane.showMessageDialog(this, "errorr in table       " + ex);

        }
    }//GEN-LAST:event_formWindowActivated

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
            String NIC = txtnic.getText();
            String BloodGroup= txtbgroup.getText();
            String DID = txtautono.getText();
           // String BPID = txtbPid.getText();
            Date Date = txtdate.getDate();
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank","root","");
                Statement st = con.createStatement();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String donatedDate = sdf.format(Date);

                //java.sql.Date sqlDate = new java.sql.Date(Date.getTime());
                LocalDate DLD = LocalDate.parse(donatedDate);
                LocalDate NDD = DLD.plusDays(90);
                String nextDate = NDD.toString();

                String query1;
                query1 ="INSERT INTO donationdetail(NIC,BloodGroup,Donation_ID,DonatedDate,NextDate )"  + "VALUES('"+NIC+"','"+BloodGroup+"','"+DID+"','"+donatedDate+"','"+nextDate+"')";
                st.executeUpdate(query1);
                
                st.executeUpdate("Update Stock set Amount =Amount + 1 where BloodGroup= '"+BloodGroup+"' ");
                
                
                String query ="select NIC,BloodGroup,Donation_ID,DonatedDate,NextDate from donationdetail ";
                 java.sql.ResultSet rs = st.executeQuery(query);
           
                 
           while(rs.next()){
                
                NIC = rs.getString("NIC");
                BloodGroup = rs.getString("BloodGroup");
                DID = rs.getString("Donation_ID");
               //  BPID = rs.getString("BloodPacketID");
                // Date =rs.getDate("DonatedDate");
                String DDate = rs.getString("DonatedDate");
                 String NDate = rs.getString("NextDate");

             String tbDate[] = {NIC,BloodGroup,DID,DDate,NDate};
                DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                tblModel.addRow(tbDate);
            }
            
            
                JOptionPane.showMessageDialog(this,"Successfully Added" );
                    txtnic.setText("");
                    txtbgroup.setText("");
                    txtautono.setText("");
                  //  txtbPid.setText("");
                    txtdate.setDate(null);
              
            }
            catch(Exception ex)
            {
                 JOptionPane.showMessageDialog(this,"Error in Update  " + ex);
            }

    }//GEN-LAST:event_btnaddActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         int selectedRow = jTable1.getSelectedRow();
    int modelRow = jTable1.convertRowIndexToModel(selectedRow); // Get the correct model row index

        DefaultTableModel tblmodel = (DefaultTableModel)jTable1.getModel();
        String tblNIC = tblmodel.getValueAt(jTable1.getSelectedRow(),0).toString();
        String tblBgroup = tblmodel.getValueAt(jTable1.getSelectedRow(),1).toString();
        //String tblDate = tblmodel.getValueAt(jTable1.getSelectedRow(),5).toString();
        //String tblDID = tblmodel.getValueAt(jTable1.getSelectedRow(),0).toString();
        txtnic.setText(tblNIC);
        txtbgroup.setText(tblBgroup);
       

        
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed

    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        TableRowSorter<DefaultTableModel> Rowsorter = new TableRowSorter<>(tblModel);
        jTable1.setRowSorter(Rowsorter);
        Rowsorter.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }//GEN-LAST:event_txtsearchKeyReleased

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
      /*  DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        TableRowSorter<DefaultTableModel> Rowsorter = new TableRowSorter<>(tblModel);
        jTable1.setRowSorter(Rowsorter);
        Rowsorter.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));*/
      String NIC = txtsearch.getText();
        try{
             Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank","root","");
             Statement st = con.createStatement();
             ResultSet rs =st.executeQuery("select * from donordetail where NIC= '"+NIC+"'");
             if(rs.next( ))
             {
                txtnic.setText(rs.getString(2));
                txtbgroup.setText(rs.getString(8));
               
             }
             else
             {
                 
                 JOptionPane.showMessageDialog(this,"Donor Doesn't Exits" );

             }
        }
        catch(Exception ex)
        {
                 JOptionPane.showMessageDialog(this,"Error in Search" + ex);
        }    
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void txtnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnicKeyPressed
        char nic = evt.getKeyChar();
        if(Character.isLetter(nic) || Character.isWhitespace(nic)|| Character.isDigit(nic)){
        txtnic.setEditable(false);
        }
        else{
        txtnic.setEditable(true);
            }    }//GEN-LAST:event_txtnicKeyPressed

    private void txtbgroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbgroupKeyPressed
        char bggroup = evt.getKeyChar();
        if(Character.isLetter(bggroup) || Character.isWhitespace(bggroup)|| Character.isDigit(bggroup)){
        txtbgroup.setEditable(false);
        }
        else{
        txtbgroup.setEditable(true);
            } 
        
    }//GEN-LAST:event_txtbgroupKeyPressed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DonerDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu alldonationmenu;
    private javax.swing.JMenu backmenu;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblbgimage;
    private javax.swing.JLabel lblblgroup;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lblnewDoner;
    private javax.swing.JLabel lblnic;
    private javax.swing.JMenu newdonationmenu;
    private javax.swing.JPanel paneladd;
    private javax.swing.JTextField txtautono;
    private javax.swing.JTextField txtbgroup;
    private com.toedter.calendar.JDateChooser txtdate;
    private javax.swing.JTextField txtnic;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
