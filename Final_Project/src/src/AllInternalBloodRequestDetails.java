
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class AllInternalBloodRequestDetails extends javax.swing.JFrame {

    /**
     * Creates new form DonerDetails
     */
    public AllInternalBloodRequestDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneladd = new javax.swing.JPanel();
        lblnewDoner = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        bloodrequestmenu = new javax.swing.JMenu();
        internalrequest = new javax.swing.JMenu();
        externalrequest = new javax.swing.JMenu();
        allrequestmenu = new javax.swing.JMenu();
        Internalrequest = new javax.swing.JMenu();
        Externalrequest = new javax.swing.JMenu();
        backmenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paneladd.setBackground(new java.awt.Color(0,0,0,30));

        lblnewDoner.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        lblnewDoner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblnewDoner.setText("All IN Requested Details");

        txtsearch.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/search.png"))); // NOI18N

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jTable1.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IRequestID", "Ward No", "Recomended By", "Date", "Blood Group", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout paneladdLayout = new javax.swing.GroupLayout(paneladd);
        paneladd.setLayout(paneladdLayout);
        paneladdLayout.setHorizontalGroup(
            paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1029, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addGap(371, 371, 371)
                        .addComponent(lblnewDoner, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(341, 341, 341))
        );
        paneladdLayout.setVerticalGroup(
            paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addComponent(lblnewDoner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        getContentPane().add(paneladd, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 1160, 450));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/bg2.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1616, 719));

        bloodrequestmenu.setBackground(new java.awt.Color(255, 51, 51));
        bloodrequestmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Donor.png"))); // NOI18N
        bloodrequestmenu.setText("Add Request   ");
        bloodrequestmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        bloodrequestmenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bloodrequestmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bloodrequestmenuMouseClicked(evt);
            }
        });

        internalrequest.setBackground(new java.awt.Color(255, 51, 51));
        internalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Donor.png"))); // NOI18N
        internalrequest.setText("Internal Request   ");
        internalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        internalrequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        internalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                internalrequestMouseClicked(evt);
            }
        });
        bloodrequestmenu.add(internalrequest);

        externalrequest.setBackground(new java.awt.Color(255, 51, 51));
        externalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Donor.png"))); // NOI18N
        externalrequest.setText("External Request   ");
        externalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        externalrequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        externalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                externalrequestMouseClicked(evt);
            }
        });
        bloodrequestmenu.add(externalrequest);

        jMenuBar1.add(bloodrequestmenu);

        allrequestmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/more.png"))); // NOI18N
        allrequestmenu.setText("All Request Details          ");
        allrequestmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        allrequestmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allrequestmenuMouseClicked(evt);
            }
        });

        Internalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/more.png"))); // NOI18N
        Internalrequest.setText("Internal Request Details          ");
        Internalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        Internalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InternalrequestMouseClicked(evt);
            }
        });
        allrequestmenu.add(Internalrequest);

        Externalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/more.png"))); // NOI18N
        Externalrequest.setText("External Request Details          ");
        Externalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        Externalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExternalrequestMouseClicked(evt);
            }
        });
        allrequestmenu.add(Externalrequest);

        jMenuBar1.add(allrequestmenu);

        backmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/exit.png"))); // NOI18N
        backmenu.setText("Back                                          ");
        backmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        backmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backmenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(backmenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bloodrequestmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bloodrequestmenuMouseClicked
      
    }//GEN-LAST:event_bloodrequestmenuMouseClicked

    private void backmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backmenuMouseClicked
        Home frmNewForm = new Home();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backmenuMouseClicked

    private void allrequestmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allrequestmenuMouseClicked
       
    }//GEN-LAST:event_allrequestmenuMouseClicked

    private void internalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_internalrequestMouseClicked
        InternalBloodRequest frmNewForm = new InternalBloodRequest ();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_internalrequestMouseClicked

    private void externalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_externalrequestMouseClicked
        ExternalBloodRequest frmNewForm = new ExternalBloodRequest ();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_externalrequestMouseClicked

    private void InternalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InternalrequestMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_InternalrequestMouseClicked

    private void ExternalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExternalrequestMouseClicked
      AllExternalBloodRequestDetails frmNewForm = new AllExternalBloodRequestDetails();
      frmNewForm.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_ExternalrequestMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try
        {
         Class.forName("com.mysql.cj.jdbc.Driver");
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "");
         Statement st = con.createStatement();
         String query ="select * from internalrequests ";
        
         
            java.sql.ResultSet rs = st.executeQuery(query);
           
            while(rs.next()){
                
                String IRID = rs.getString("IRequestID");
                String wno = rs.getString("WardNo");
                String recby = rs.getString("RecomendedBy");
                String Date = rs.getString("RDate");
                String BloodGroup = rs.getString("RBloodGroup");
                String amount = rs.getString("Quantity");
              
                String tbDate[] = {IRID,wno,recby,Date,BloodGroup,amount};
                DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                tblModel.addRow(tbDate);
            }
            
           
        }
        catch(Exception ex)
        {
             JOptionPane.showMessageDialog(this, "errorr in table       " + ex);

        }   
    }//GEN-LAST:event_formWindowActivated

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
       
                DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                TableRowSorter<DefaultTableModel> Rowsorter = new TableRowSorter<>(tblModel);
                jTable1.setRowSorter(Rowsorter);
                Rowsorter.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }//GEN-LAST:event_txtsearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DonerDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Externalrequest;
    private javax.swing.JMenu Internalrequest;
    private javax.swing.JMenu allrequestmenu;
    private javax.swing.JMenu backmenu;
    private javax.swing.JMenu bloodrequestmenu;
    private javax.swing.JMenu externalrequest;
    private javax.swing.JMenu internalrequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblnewDoner;
    private javax.swing.JPanel paneladd;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
