
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class ExternalBloodRequest extends javax.swing.JFrame {

    /**
     * Creates new form DonerDetails
     */
        String HospitalName;
        String BloodGroup;
        String Quantity;
        
    public ExternalBloodRequest() {
        initComponents();
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneladd = new javax.swing.JPanel();
        lblreqid = new javax.swing.JLabel();
        txtreqid = new javax.swing.JTextField();
        lblhospital = new javax.swing.JLabel();
        lblhospitaladrs = new javax.swing.JLabel();
        lblrecby = new javax.swing.JLabel();
        lblreqdate = new javax.swing.JLabel();
        lblbamount = new javax.swing.JLabel();
        lblblgroup = new javax.swing.JLabel();
        txtreqdate = new com.toedter.calendar.JDateChooser();
        cbbamount = new javax.swing.JComboBox<>();
        btnadd = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        lblnewDoner = new javax.swing.JLabel();
        txtrecby = new javax.swing.JTextField();
        cbBgroup = new javax.swing.JComboBox<>();
        cbhName = new javax.swing.JComboBox<>();
        txthadrs = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        bloodrequestmenu = new javax.swing.JMenu();
        internalrequest = new javax.swing.JMenu();
        externalrequest = new javax.swing.JMenu();
        allrequestmenu = new javax.swing.JMenu();
        Internalrequest = new javax.swing.JMenu();
        Externalrequest = new javax.swing.JMenu();
        backmenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paneladd.setBackground(new java.awt.Color(0,0,0,30));

        lblreqid.setBackground(new java.awt.Color(255, 255, 255));
        lblreqid.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblreqid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblreqid.setText("REQUEST ID");
        lblreqid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        txtreqid.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtreqid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        txtreqid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtreqidKeyPressed(evt);
            }
        });

        lblhospital.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblhospital.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblhospital.setText("REQUESTED HOSPITAL");
        lblhospital.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        lblhospitaladrs.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblhospitaladrs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblhospitaladrs.setText("HOSPITAL ADDRESS");
        lblhospitaladrs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        lblrecby.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblrecby.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblrecby.setText("RECCOMENDED BY");
        lblrecby.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        lblreqdate.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblreqdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblreqdate.setText("DATE");
        lblreqdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        lblbamount.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblbamount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblbamount.setText("REQUESTED QUANTITY");
        lblbamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        lblblgroup.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblblgroup.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblblgroup.setText("BLOOD GROUP");
        lblblgroup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));

        txtreqdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        txtreqdate.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N

        cbbamount.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        cbbamount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<<Blood Quantity>>", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        cbbamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        cbbamount.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbamountItemStateChanged(evt);
            }
        });

        btnadd.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnadd.setText("ADD");
        btnadd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 3, true));
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnclear.setText("CLEAR");
        btnclear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 3, true));
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        lblnewDoner.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        lblnewDoner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblnewDoner.setText("Add Request Details");

        txtrecby.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txtrecby.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        txtrecby.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtrecbyKeyPressed(evt);
            }
        });

        cbBgroup.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        cbBgroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<<Select Blood Group>>", "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        cbBgroup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        cbBgroup.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBgroupItemStateChanged(evt);
            }
        });

        cbhName.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        cbhName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<<Select Hospital>>" }));
        cbhName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        cbhName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbhNameItemStateChanged(evt);
            }
        });

        txthadrs.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        txthadrs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255), 2));
        txthadrs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txthadrsMouseClicked(evt);
            }
        });
        txthadrs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txthadrsKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout paneladdLayout = new javax.swing.GroupLayout(paneladd);
        paneladd.setLayout(paneladdLayout);
        paneladdLayout.setHorizontalGroup(
            paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblrecby, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblreqid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblhospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblhospitaladrs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtreqid)
                    .addComponent(txtrecby, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(cbhName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txthadrs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addGap(107, 107, 107)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblreqdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblblgroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblbamount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtreqdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbamount, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbBgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addGap(465, 465, 465)
                        .addComponent(lblnewDoner, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addGap(444, 444, 444)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(97, 97, 97))
        );
        paneladdLayout.setVerticalGroup(
            paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneladdLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblnewDoner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneladdLayout.createSequentialGroup()
                        .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblreqid)
                            .addComponent(txtreqid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblreqdate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblhospital, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblblgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbBgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbhName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblhospitaladrs)
                            .addComponent(lblbamount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txthadrs, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtreqdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblrecby)
                    .addComponent(txtrecby, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(paneladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        getContentPane().add(paneladd, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 1160, 450));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/bg2.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1616, 719));

        bloodrequestmenu.setBackground(new java.awt.Color(255, 51, 51));
        bloodrequestmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Donor.png"))); // NOI18N
        bloodrequestmenu.setText("Add Request   ");
        bloodrequestmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        bloodrequestmenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bloodrequestmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bloodrequestmenuMouseClicked(evt);
            }
        });

        internalrequest.setBackground(new java.awt.Color(255, 51, 51));
        internalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Donor.png"))); // NOI18N
        internalrequest.setText("Internal Request   ");
        internalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        internalrequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        internalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                internalrequestMouseClicked(evt);
            }
        });
        bloodrequestmenu.add(internalrequest);

        externalrequest.setBackground(new java.awt.Color(255, 51, 51));
        externalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Donor.png"))); // NOI18N
        externalrequest.setText("External Request   ");
        externalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        externalrequest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        externalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                externalrequestMouseClicked(evt);
            }
        });
        bloodrequestmenu.add(externalrequest);

        jMenuBar1.add(bloodrequestmenu);

        allrequestmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/more.png"))); // NOI18N
        allrequestmenu.setText("All Request Details          ");
        allrequestmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        allrequestmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allrequestmenuMouseClicked(evt);
            }
        });

        Internalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/more.png"))); // NOI18N
        Internalrequest.setText("Internal Request Details          ");
        Internalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        Internalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InternalrequestMouseClicked(evt);
            }
        });
        allrequestmenu.add(Internalrequest);

        Externalrequest.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/more.png"))); // NOI18N
        Externalrequest.setText("External Request Details          ");
        Externalrequest.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        Externalrequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExternalrequestMouseClicked(evt);
            }
        });
        allrequestmenu.add(Externalrequest);

        jMenuBar1.add(allrequestmenu);

        backmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/exit.png"))); // NOI18N
        backmenu.setText("Back                                          ");
        backmenu.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        backmenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backmenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(backmenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bloodrequestmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bloodrequestmenuMouseClicked
      
    }//GEN-LAST:event_bloodrequestmenuMouseClicked

    private void backmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backmenuMouseClicked
        Home frmNewForm = new Home();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backmenuMouseClicked

    private void allrequestmenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allrequestmenuMouseClicked
      
    }//GEN-LAST:event_allrequestmenuMouseClicked

    private void internalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_internalrequestMouseClicked
         InternalBloodRequest frmNewForm = new InternalBloodRequest ();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_internalrequestMouseClicked

    private void externalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_externalrequestMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_externalrequestMouseClicked

    private void InternalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InternalrequestMouseClicked
        AllInternalBloodRequestDetails frmNewForm = new  AllInternalBloodRequestDetails  ();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_InternalrequestMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
         try
        {
         Class.forName("com.mysql.cj.jdbc.Driver");
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "");
         Statement st = con.createStatement();
         java.sql.ResultSet rs = st.executeQuery("select MAX(ERequestID) from externalrequests");
         rs.next();
         rs.getString("MAX(ERequestID)");
         
         if(rs.getString("MAX(ERequestID)")==null)
         {
             txtreqid.setText("ER-0001");
         }
         else
         {
         int ID = Integer.parseInt(rs.getString("MAX(ERequestID)").substring(3,rs.getString("MAX(ERequestID)").length()));
         ID++;
         txtreqid.setText("ER-" + String.format("%04d", ID));
         }
         
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error in Request Id");
        }
         
          try
        {
         Class.forName("com.mysql.cj.jdbc.Driver");
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "");
         Statement st = con.createStatement();
         java.sql.ResultSet rs = st.executeQuery("select HospitalName from hospitals");

         while(rs.next())
         {
         String Hname =rs.getString("HospitalName");
         cbhName.addItem(Hname);
         }
       
        }
        catch(Exception ex)
        {
         JOptionPane.showMessageDialog(null, ex);
        }
         
    }//GEN-LAST:event_formWindowActivated

    private void txthadrsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txthadrsMouseClicked
        String Hname =(String) cbhName.getSelectedItem();
        try
        {
         Class.forName("com.mysql.cj.jdbc.Driver");
         Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "");
         Statement st = con.createStatement();
          java.sql.ResultSet rs = st.executeQuery("select HospitalAddress from hospitals where HospitalName = '"+Hname+"'");

        
         while(rs.next())
         {
          txthadrs.setText(rs.getString(1));

         }
        }
        catch(Exception ex)
        {
                    JOptionPane.showMessageDialog(null, ex);
 
        }
            
    }//GEN-LAST:event_txthadrsMouseClicked

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bloodbank", "root", "");
         
            String RID = txtreqid.getText();
            String HAdrs = txthadrs.getText();
            String Recomend = txtrecby.getText();
            Date date = txtreqdate.getDate();
           
           if(HospitalName == null)
            {
            JOptionPane.showMessageDialog(null,"Select The Hospital Name");

            }
            else if(HAdrs.isEmpty())
            {
             JOptionPane.showMessageDialog(null,"Check The Hospital Address");
   
            }
            else if(Recomend.isEmpty())
            {
             JOptionPane.showMessageDialog(null,"Enter The Reccomenned Details");
   
            }
            
            else if(txtreqdate.getDate()== null)
            {
                JOptionPane.showMessageDialog(this,"Please Enter Date"  );
            }
             else if(BloodGroup == null)
            {
            JOptionPane.showMessageDialog(null,"Select The Blood Group");

            }
             else if(BloodGroup == null)
            {
            JOptionPane.showMessageDialog(null,"Select The Blood Group");

            }
             else if(Quantity == null)
            {
            JOptionPane.showMessageDialog(null,"Select The Quantity");

            }
             else{
            Statement st = con.createStatement();
                String query1;
               
               query1 ="INSERT INTO externalrequests(ERequestID,HospitalName,HospitalAddress,RecomendedBy,RDate,RBloodGroup,Quantity)"  + "VALUES('"+RID+"','"+HospitalName+"','"+HAdrs+"','"+Recomend+"','"+date+"','"+BloodGroup+"','"+Quantity+"')";
               st.executeUpdate(query1);
               txtreqid.setText("");
                cbhName.setSelectedIndex(0);
                txthadrs.setText("");
               txtrecby.setText("");
               txtreqdate.setDate(null);
                cbBgroup.setSelectedIndex(0);
                cbbamount.setSelectedIndex(0);
             JOptionPane.showMessageDialog(null,"Success");

             }
            
        }
        catch(Exception ex)
        {
          JOptionPane.showMessageDialog(null,ex);

        }
        
        
    }//GEN-LAST:event_btnaddActionPerformed

    private void cbBgroupItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBgroupItemStateChanged
       BloodGroup = cbBgroup.getSelectedItem().toString();
    }//GEN-LAST:event_cbBgroupItemStateChanged

    private void cbbamountItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbamountItemStateChanged
       Quantity = cbbamount.getSelectedItem().toString();
    }//GEN-LAST:event_cbbamountItemStateChanged

    private void txtreqidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtreqidKeyPressed
       char Rid = evt.getKeyChar();
        if(Character.isLetter(Rid) || Character.isWhitespace(Rid)|| Character.isDigit(Rid)){
        txtreqid.setEditable(false);
        }
        else{
        txtreqid.setEditable(true);
        }
    }//GEN-LAST:event_txtreqidKeyPressed

    private void txthadrsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthadrsKeyPressed
        char Hadrs = evt.getKeyChar();
        if(Character.isLetter(Hadrs) || Character.isWhitespace(Hadrs)|| Character.isDigit(Hadrs)){
        txthadrs.setEditable(false);
        }
        else{
        txthadrs.setEditable(true);
        }
    }//GEN-LAST:event_txthadrsKeyPressed

    private void txtrecbyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrecbyKeyPressed
        char recby = evt.getKeyChar();
        if(Character.isDigit(recby) || Character.isWhitespace(recby)){
        txtrecby.setEditable(false);
        }
        else{
        txtrecby.setEditable(true);
        }
    }//GEN-LAST:event_txtrecbyKeyPressed

    private void cbhNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbhNameItemStateChanged
        HospitalName= cbhName.getSelectedItem().toString();
        
    }//GEN-LAST:event_cbhNameItemStateChanged

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        
                txtreqid.setText("");
                cbhName.setSelectedIndex(0);
                txthadrs.setText("");
               txtrecby.setText("");
               txtreqdate.setDate(null);
                cbBgroup.setSelectedIndex(0);
                cbbamount.setSelectedIndex(0);
    }//GEN-LAST:event_btnclearActionPerformed

    private void ExternalrequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExternalrequestMouseClicked
         AllExternalBloodRequestDetails frmNewForm = new AllExternalBloodRequestDetails();
        frmNewForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ExternalrequestMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DonerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DonerDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Externalrequest;
    private javax.swing.JMenu Internalrequest;
    private javax.swing.JMenu allrequestmenu;
    private javax.swing.JMenu backmenu;
    private javax.swing.JMenu bloodrequestmenu;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.JComboBox<String> cbBgroup;
    private javax.swing.JComboBox<String> cbbamount;
    private javax.swing.JComboBox<String> cbhName;
    private javax.swing.JMenu externalrequest;
    private javax.swing.JMenu internalrequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblbamount;
    private javax.swing.JLabel lblblgroup;
    private javax.swing.JLabel lblhospital;
    private javax.swing.JLabel lblhospitaladrs;
    private javax.swing.JLabel lblnewDoner;
    private javax.swing.JLabel lblrecby;
    private javax.swing.JLabel lblreqdate;
    private javax.swing.JLabel lblreqid;
    private javax.swing.JPanel paneladd;
    private javax.swing.JTextField txthadrs;
    private javax.swing.JTextField txtrecby;
    private com.toedter.calendar.JDateChooser txtreqdate;
    private javax.swing.JTextField txtreqid;
    // End of variables declaration//GEN-END:variables
}
